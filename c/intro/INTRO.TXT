

the intro
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ



the code
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

- Coded with Watcom C/C++ v11.0
- DOS Extender. I started with the XIDS extender from Maxwell Sayles, and
  modified and tweaked it a lot to suit my needs. I changed so much that I
  think I now can call it my own... DPMI only (CWSDPMI, Win95, etc),
  extremely small (a couple of 100 bytes). I also added replacement
  routines for the Watcom standard libraries that I needed...
- I also had to modify my VBE2 routines to work with the extender
- MXM player. Pascal/Cubic Team's player modified for the extender
- Compression. I used my own packer, based LZARI with some crypting stuff,
  and also a JPEG-like lossy compressor for some of the true-color images
- Texture/Gfx Calculation

- Softsynth. To further reduce the intro size, I coded a small
  sample-generator, removed the samples from the module, and inserted the
  parameters for the SoftSynth. These samples are calculated at startup.
  - additive synthesis
  - bandpass filter
  - resonance filter
  - fourier equalizer
  - morphing
- Implicit Surfaces
- Raytracing. TrueColor raytracing of spheres and planes, shadows,
  reflections...
- 3D Engine. Sloppy, old version of 3d engine. The newest version wasn't
  100% compileable (lots of bugs and error right now), so I used the
  newest version I could find that compiled without errors.. :-/ Better
  that nothing...
- Particle System: Real physics, gravitation, viscous drag (friction),
  Hooks spring law...

BTW: The "intro" was made on a P-166, Hercules Dynamite, 1Mb GUS. No
testing on other machines were done :-/ Don't know how it will run on
other machines... Don't care either!
If I find the time and motivation needed, I might consider optimizing this
shit, fixing a few bugs, and release a proper version... Time will
tell....  I have more "important" things to do too, so...  perhaps...

ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Ting som kanskje kan brukes i en intro:

ş Raytraced tunnel, trace hver 8x8 pixel og interpoler
ş Raytraced planes... Samme, men to eller flere plan..
ş Raytraced sphere... Kanskje samme her? Trace innsiden av en kule, hver 8
  eller noe pixel, og tegn... Da kan man rotere den i akke retninger, og
  bruke som "himmel" eller bakgrunn for andre effekter
  Man kan enten interpolere U/V koordinater i texture, eller (truecolor)
  interpolere rgb fargene direkte for med "filtered" look.
ş Simplifisert engine..... Ikke hierarki, keyframing eller 3ds loading...
  kun rotering av objekter + kamera.... For † slenge inn objekter som
  f.eks blobs, etc... Og for † f† inn kalkulerte objekter....
ş Hvis man f†r ferdig en slik engine, tror jeg nok med 95% sikkerhet at
  jeg skal rekke † legge inn realtime skygger/spotlights i den.... Vet
  100% hvordan jeg skal gj›re det, s†....
  Og kanskje alpha mapping, for † lage noen kule lys-effekter...
ş Vi m† finne noen kule patterns eller m›nster for blob'ene... Vi kan
  kanskje sette opp path'en i 3DS, s† kan jeg dumpe 3ds fila (spline'ne)
  med en dumper jeg har ferdig, og hardkode dem i exe fila.... En enkel
  spline rutine med x,y,z bare (som Vector-spline i 3ds animasjon) burde
  v‘re grei nok † lage ferdig....
ş Samme hvis jeg f†r ferdig ray-tracinga... Da m† vi ha noen path's for
  spheres'ene... Anim‚r noen kuler i 3ds, og dump spline dataene...


